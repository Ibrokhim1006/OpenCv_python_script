import cv2,requests,json,base64,os

image_file = 'plates/scaned.jpg'
api = 'http://127.0.0.1:8000/video_feed/'

with open(image_file, "rb") as f:
    im_bytes = f.read()        
im_b64 = base64.b64encode(im_bytes).decode("utf8")

payload = json.dumps({"image": im_b64})
print(type(payload))
response = requests.post(api, data=payload)


try:
    data = response.json()     
    # print(data)                
except requests.exceptions.RequestException:
    print(response)

# s = str('')

# decode_file = base64.b64decode(s)
# img = open('image.jpg','wb')
# img.write(decode_file)
# img